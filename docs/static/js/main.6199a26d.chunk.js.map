{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAe5C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,OAKd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCAPO,EAAc,SAAC,GAAkB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAChC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCIHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAW,WACPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAGtB,CAACpB,IAEGqB,EDX0BK,CAAa1B,GAAjCa,EAFsB,EAE3BN,KAAaa,EAFc,EAEdA,QAErB,OACI,oCACI,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,YACZ,yBAAKA,UAAU,aAEPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UEnBnBkB,EAAe,WAAO,IAAD,EAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAI9B,OACI,oCACI,4CAEA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ4C,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,U,MCb1D8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.6199a26d.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories(cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n    };\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type='text'\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\nexport const getGifs = async( category ) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=AregBi3nSpPjSfuqXcT5dnJlgPhG8uil`;\n\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    });\n\n    return gifs;\n};","import React from 'react'\n\nexport const GifGridItem = ({title, url}) => {\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","/* Importacion de React, y los hooks useState, useEffect  */\n// useEffect sirve para hacer como un tipo de condicion, lo que esta dentro de la funcion solo se ejecutara una sola vez, y en la parte final, dentro de los corchetes es la ecepcion.\nimport React from 'react'\n\n/* incovamos nuestro primeer custom hooks */\nimport { useFetchGifs } from '../hooks/useFetchGifs';\n\n/* Importacion del componente GifGridIem su tarea es la siguiente: Es el componente responsable de renderizar la imagen(card) con title, y su url*/\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const { data:images, loading } = useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n            {loading && <p className='animate__animated animate__flash'>Cargando</p>}\n            <div className='card-grid'>\n                {\n                    images.map(img => (\n                        <GifGridItem \n                            key={img.id}\n                            {...img}\n                        />\n                    ))\n                }\n            </div>\n        </>\n    )\n}\n","import { useState, useEffect } from 'react';\n\nimport { getGifs } from '../helpers/getGifs';\n\n\n\n\nexport const useFetchGifs = ( category ) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n    \n    useEffect( () => {\n        getGifs( category )\n            .then( imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            });\n    }, [category]);\n\n    return state;\n}\n","import React, {useState} from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return(\n        <>\n            <h1>GifExpertApp</h1>\n\n            <AddCategory setCategories={setCategories} />\n            <hr />\n\n            <ol>\n                {\n                    categories.map( category => (\n                        <GifGrid key={category} category={category} />\n                    ))\n                }\n            </ol>\n        </>\n    );\n};\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}